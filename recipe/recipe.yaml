# yaml-language-server: $schema=https://raw.githubusercontent.com/prefix-dev/recipe-format/main/schema.json

schema_version: 1

context:
  name: maturin
  version: "1.8.6"

package:
  name: "${{ name }}"
  version: "${{ version }}"

source:
  url: https://pypi.org/packages/source/m/maturin/maturin-${{ version }}.tar.gz
  sha256: "0e0dc2e0bfaa2e1bd238e0236cf8a2b7e2250ccaa29c1aa8d0e61fa664b0289d"

build:
  number: 1
  skip: "not match(python, python_min + '.*')"
  script:
    interpreter: nu
    env:
      MATURIN_SETUP_ARGS: "--no-default-features --features=cli-completion,log,scaffolding,upload,native-tls"
    content:
      - cargo-bundle-licenses --format yaml --output THIRDPARTY.yml
      - cargo build
      - ./target/debug/maturin build --release
      - "python -m pip install . -vv  --no-deps dist/*.whl"

  dynamic_linking:
    missing_dso_allowlist:
      - if: osx
        then:
          - /usr/lib/libresolv.9.dylib

  python:
    version_independent: true

requirements:
  build:
    - nushell
    - "cargo-bundle-licenses"
    - "${{ compiler('c') }}"
    - "${{ stdlib('c') }}"
    - "${{ compiler('rust') }}"
    - if: build_platform != target_platform
      then:
        - python
        - cross-python_${{ target_platform }}
  host:
    - python
    - pip
    - if: unix
      then:
        - openssl
        - pkg-config
  run:
    # do we really need python here?
    - python
    - tomli >=1.1.0

  ignore_run_exports:
    from_package:
      - cross-python_${{ target_platform }}

tests:
  - python:
      python_version: "${{ python_min }}.*"
      imports:
        - maturin
  - script:
      - maturin --help

about:
  homepage: https://github.com/PyO3/maturin
  repository: https://github.com/PyO3/maturin
  license: MIT
  license_family: MIT
  license_file:
    - license-mit
    - THIRDPARTY.yml
  summary: >-
    Build and publish crates with pyo3, rust-cpython and cffi bindings as well as rust binaries as python packages

extra:
  recipe-maintainers:
    - messense
    - apcamargo
    - synapticarbors
